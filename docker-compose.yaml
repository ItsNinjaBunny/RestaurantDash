version: '3.8'

networks:
  dash:
    external: false

services:
  gateway:
    image: braydenwongcode/restaurant-gateway
    # build:
    #   context: ./gateway/
    #   dockerfile: dockerfile
    networks:
      - dash
    ports:
      - 8080:8080
    restart: always

  eureka:
    image: braydenwongcode/restaurant-eureka:latest
    # build:
    #   context: ./eureka/
    #   dockerfile: dockerfile
    networks:
      - dash
    ports:
      - 8761
    restart: always

  inventory_management:
    image: mysql:5.7
    platform: linux/x86_64
    restart: always
    volumes:
      - inventory:/var/lib/mysql
    environment:
      MYSQL_DATABASE: Inventory
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_ROOT_PASSWORD: root
    networks:
      - dash
    ports:
      - 3306
    command: mysqld

  user_management:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - dash
    volumes:
      - users:/data/db
    ports:
      - 27017
    restart: always

  restaurant_management:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - dash
    volumes:
      - restaurants:/data/db
    ports:
      - 27017
    restart: always

  order_management:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - dash
    volumes:
      - orders:/data/db
    ports:
      - 27017
    restart: always

  users:
    image: braydenwongcode/restaurant-users:latest
    # build:
    #   context: ./Users/
    #   dockerfile: dockerfile
    # env_file:
    #   - ./users/src/config/.env.config
    networks:
      - dash
    deploy:
      replicas: 2
    restart: always
    
  restaurants:
    image: braydenwongcode/restaurant-restaurants:latest
    # build:
    #   context: ./Restaurant/
    #   dockerfile: dockerfile
    # env_file:
    #   - ./restaurant/src/config/.env.config
    networks:
      - dash
    deploy:
      replicas: 2
    restart: always

  inventory:
    image: braydenwongcode/restaurant-inventory:latest
    # build:
    #   context: ./Inventory/
    #   dockerfile: dockerfile
    # env_file:
    #   - ./inventory/src/config/.env.config
    networks:
      - dash
    deploy:
      replicas: 3
    restart: always

  orders:
    image: braydenwongcode/restaurant-orders:latest
    # build:
    #   context: ./Orders/
    #   dockerfile: dockerfile
    # env_file:
    #   - ./orders/src/config/.env
    networks:
      - dash
    deploy:
      replicas: 3
    restart: always
  
  frontend:
    image: paco1232dsq/frontend:latest
    networks:
      - dash
    ports: 
    - 3000:3000
    stdin_open: true
    tty: true
    restart: always

volumes:
  inventory:
    external: true
  users:
    external: true
  restaurants:
    external: true
  orders:
    external: true